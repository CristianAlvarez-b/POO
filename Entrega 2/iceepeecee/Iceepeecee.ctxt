#BlueJ class context
comment0.target=Iceepeecee
comment0.text=\r\n\ The\ simulator\ of\ the\ island\ group\ of\ Iceepeecee.\ It\ has\ \r\n\ islands\ and\ planes\ with\ cameras\ that\ fly\ over\ the\ islands\ \r\n\ taking\ photographs.\r\n\r\n\ @author\ (Juliana\ Brice\u00F1o\ &\ Cristian\ Alvarez)\r\n\ @version\ (1.0)\r\n
comment1.params=lenght\ width
comment1.target=Iceepeecee(int,\ int)
comment1.text=\r\n\ Create\ an\ empty\ Iceepeecee\ space.\r\n\ \r\n\ @param\ lenght\ of\ the\ canvas\r\n\ @param\ width\ of\ the\ canvas\r\n
comment10.params=island
comment10.target=int[][]\ islandLocation(java.lang.String)
comment10.text=\r\n\ Get\ the\ location\ of\ an\ island.\r\n\ \r\n\ @param\ color\ of\ the\ island\r\n
comment11.params=flight
comment11.target=int[][]\ flightLocation(java.lang.String)
comment11.text=\r\n\ Get\ the\ location\ of\ a\ flight.\r\n\ \r\n\ @param\ color\ of\ the\ flight\r\n
comment12.params=color
comment12.target=int\ flightCamera(java.lang.String)
comment12.text=\r\n\ Retrieves\ the\ angle\ (theta)\ of\ the\ camera\ for\ a\ specific\ flight\ in\ Iceepeecee.\r\n\r\n\ @param\ color\ The\ identifier\ of\ the\ flight\ for\ which\ the\ camera\ angle\ is\ requested.\r\n\ @return\ The\ angle\ (in\ degrees)\ of\ the\ camera\ for\ the\ specified\ flight.\r\n\ @throws\ IllegalArgumentException\ If\ the\ specified\ flight\ doesn't\ exist\ or\ if\ it\ doesn't\ have\ a\ photograph.\r\n
comment13.params=
comment13.target=void\ makeVisible()
comment13.text=\r\n\ Make\ Iceepeecee\ and\ its\ elements\ visible.\r\n
comment14.params=
comment14.target=void\ makeInvisible()
comment14.text=\r\n\ Make\ Iceepeecee\ and\ its\ elements\ invisible.\r\n
comment15.params=
comment15.target=java.lang.String[]\ islands()
comment15.text=\r\n\ Consult\ the\ existing\ islands.\r\n
comment16.params=
comment16.target=java.lang.String[]\ flights()
comment16.text=\r\n\ Consult\ the\ existing\ flights.\r\n
comment17.params=
comment17.target=java.lang.String\ selectColorIsland()
comment17.text=\r\n\ Selects\ a\ color\ for\ a\ new\ island\ based\ on\ the\ available\ colors\ and\ existing\ islands.\r\n\ If\ all\ available\ colors\ are\ already\ associated\ with\ islands,\ it\ returns\ the\ first\ color\ in\ the\ list.\r\n\r\n\ @return\ A\ color\ (as\ a\ string)\ for\ a\ new\ island.\r\n
comment18.params=
comment18.target=java.lang.String\ selectColorFlight()
comment18.text=\r\n\ Selects\ a\ color\ for\ a\ new\ flight\ based\ on\ the\ available\ colors\ and\ existing\ flights.\r\n\ If\ all\ available\ colors\ are\ already\ associated\ with\ flights,\ it\ returns\ the\ first\ color\ in\ the\ list.\r\n\r\n\ @return\ A\ color\ (as\ a\ string)\ for\ a\ new\ flight.\r\n
comment19.params=
comment19.target=java.lang.String[]\ observedIslands()
comment19.text=\r\n\ Retrieves\ the\ colors\ of\ islands\ observed\ by\ flights\ in\ Iceepeecee\ based\ on\ the\ flight\ photographs.\r\n\r\n\ @return\ An\ array\ of\ strings\ containing\ the\ colors\ of\ observed\ islands.\r\n
comment2.params=islands\ flights
comment2.target=Iceepeecee(int[][][],\ int[][][])
comment2.text=\r\n\ Create\ an\ Iceepeecee\ with\ islands\ and\ flights.\r\n\ \r\n\ @param\ islands\ to\ add\r\n\ @param\ flights\ to\ add\r\n
comment20.params=
comment20.target=java.lang.String[]\ uselessFlights()
comment20.text=\r\n\ Retrieves\ the\ colors\ of\ flights\ that\ have\ taken\ photographs\ without\ capturing\ any\ observed\ islands.\r\n\r\n\ @return\ An\ array\ of\ strings\ containing\ the\ colors\ of\ useless\ flights.\r\n
comment21.params=
comment21.target=boolean\ ok()
comment21.text=\r\n\ Checks\ the\ operational\ status\ of\ the\ Iceepeecee\ simulator.\r\n\r\n\ @return\ True\ if\ the\ simulator\ is\ in\ an\ operational\ state,\ false\ otherwise.\r\n
comment22.params=
comment22.target=void\ borderIsland()
comment22.text=\r\n\ Draws\ borders\ around\ observed\ islands\ based\ on\ flight\ photographs\ and\ erases\ borders\ from\ non-observed\ islands.\r\n\ This\ method\ updates\ the\ visual\ representation\ of\ the\ islands\ in\ the\ Iceepeecee\ simulation.\r\n
comment23.params=
comment23.target=boolean\ isVisible()
comment23.text=\r\n\ Checks\ the\ visibility\ status\ of\ the\ Iceepeecee\ simulation.\r\n\r\n\ @return\ True\ if\ the\ simulation\ is\ currently\ visible,\ false\ otherwise.\r\n
comment24.params=
comment24.target=void\ finish()
comment24.text=\r\n\ Finish\ the\ simulator.\r\n
comment3.params=color\ polygon
comment3.target=void\ addIsland(java.lang.String,\ int[][])
comment3.text=\r\n\ Add\ a\ new\ island\ to\ Iceepeecee.\r\n\ \r\n\ @param\ color\ of\ the\ island\r\n\ @param\ coordinates\ of\ the\ vertices\ of\ the\ island\r\n
comment4.params=color\ from\ to
comment4.target=void\ addFlight(java.lang.String,\ int[],\ int[])
comment4.text=\r\n\ Add\ a\ new\ flight\ to\ Iceepeecee.\r\n\ \r\n\ @param\ color\ of\ the\ flight\r\n\ @param\ coordinates\ of\ the\ start\ of\ the\ flight\r\n\ @param\ coordinates\ of\ the\ end\ of\ the\ flight\r\n
comment5.params=theta
comment5.target=void\ photograph(int)
comment5.text=\r\n\ Takes\ photographs\ with\ a\ specified\ angle\ (theta)\ for\ all\ flights\ in\ Iceepeecee.\r\n\r\n\ @param\ theta\ The\ angle\ (in\ degrees)\ at\ which\ the\ photographs\ will\ be\ taken.\r\n
comment6.params=theta
comment6.target=void\ photograph(double)
comment6.text=\r\n\ Takes\ photographs\ with\ a\ specified\ angle\ (theta)\ for\ all\ flights\ in\ Iceepeecee.\r\n\r\n\ @param\ theta\ The\ angle\ (in\ degrees)\ at\ which\ the\ photographs\ will\ be\ taken.\r\n
comment7.params=flight\ theta
comment7.target=void\ photograph(java.lang.String,\ int)
comment7.text=\r\n\ Takes\ a\ photograph\ with\ a\ specified\ angle\ (theta)\ for\ a\ specific\ flight\ in\ Iceepeecee.\r\n\r\n\ @param\ flight\ The\ identifier\ of\ the\ flight\ for\ which\ the\ photograph\ will\ be\ taken.\r\n\ @param\ theta\ \ The\ angle\ (in\ degrees)\ at\ which\ the\ photograph\ will\ be\ taken.\r\n\ @throws\ IllegalArgumentException\ If\ the\ specified\ flight\ does\ not\ exist.\r\n
comment8.params=color
comment8.target=void\ delIsland(java.lang.String)
comment8.text=\r\n\ Delete\ an\ island.\r\n\ \r\n\ @param\ color\ of\ the\ island\ to\ delete\r\n
comment9.params=color
comment9.target=void\ delFlight(java.lang.String)
comment9.text=\r\n\ Delete\ a\ flight.\r\n\ \r\n\ @param\ color\ of\ the\ flight\ to\ delete\r\n
numComments=25
